name: Centralized CI/CD Pipeline

on:
  repository_dispatch:
    types: [service-updated]
  workflow_dispatch:
    inputs:
      service:
        description: 'Service to build'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - client
        - produit
        - commande

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      client-changed: ${{ steps.changes.outputs.client }}
      produit-changed: ${{ steps.changes.outputs.produit }}
      commande-changed: ${{ steps.changes.outputs.commande }}
    steps:
      - name: Checkout all repos
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changes
        id: changes
        run: |
          # Logique pour dÃ©tecter les changements
          echo "client=true" >> $GITHUB_OUTPUT
          echo "produit=true" >> $GITHUB_OUTPUT
          echo "commande=true" >> $GITHUB_OUTPUT

  build-client:
    if: needs.detect-changes.outputs.client-changed == 'true' || github.event.inputs.service == 'all' || github.event.inputs.service == 'client'
    needs: detect-changes
    runs-on: ubuntu-latest
    steps:
      - name: Build service-client
        run: |
          echo "Building service-client..."
          # Logique de build

  build-produit:
    if: needs.detect-changes.outputs.produit-changed == 'true' || github.event.inputs.service == 'all' || github.event.inputs.service == 'produit'
    needs: detect-changes
    runs-on: ubuntu-latest
    steps:
      - name: Build service-produit
        run: |
          echo "Building service-produit..."
          # Logique de build

  build-commande:
    if: needs.detect-changes.outputs.commande-changed == 'true' || github.event.inputs.service == 'all' || github.event.inputs.service == 'commande'
    needs: detect-changes
    runs-on: ubuntu-latest
    steps:
      - name: Build service-commande
        run: |
          echo "Building service-commande..."
          # Logique de build

  deploy:
    needs: [build-client, build-produit, build-commande]
    if: always() && (needs.build-client.result == 'success' || needs.build-produit.result == 'success' || needs.build-commande.result == 'success')
    runs-on: ubuntu-latest
    steps:
      - name: Deploy services
        run: |
          echo "Deploying updated services..."
